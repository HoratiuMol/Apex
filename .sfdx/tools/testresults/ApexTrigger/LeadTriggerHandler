public class LeadTriggerHandler{
    public static void beforeInsertHandler(List<lead> newRecords){
        for(Lead leadRecord : newRecords){
            if(String.isBlank(leadRecord.LeadSource)){
                leadRecord.LeadSource='Other';
            }
            //validation rules on industry field
            if(String.isBlank(leadRecord.Industry)){
                leadRecord.addError('The industry field cannot be blank');
            }
        }
    }

    public static void afterInsertHandler(List<lead> newRecords){
        for(Lead leadRecord : newRecords){
            List<Task> leadTasks=new List<Task>();
            //creata task, but this for loop will execute 1000 times per record, so whe must store it as a list
            Task leadTask=new Task(Subject='Follow up on Lead Status',WhoId=leadRecord.Id);
            //insert leadTask;
            leadTasks.add(leadTask);
            //this will not activate the limitations
        }
        insert leadTasks;

        lead anotherLead=new Lead(LastName='Test lead Sinlge',Status='Open-Not Contacted');
        insert anotherLead;//this will throw a DML exception "maximum trigger depth exceeded", we will learn to avoid it

    }

    public static void beforeUpdateHandler(List<lead> newRecords, Map<Id,Lead> oldRecordsMap){
        for(Lead leadRecord : newRecords){
            if(Trigger.isBefore && String.isBlank(leadRecord.LeadSource)){/*this only activates if the trigger is a before*/
            leadRecord.LeadSource='Other';
        }
        if((leadRecord.Status=='Closed-Converte'||leadRecord.Status=='Closed-Not Converte') 
    %% oldRecordsMap.get(leadRecord.Id).Status=='Open - Not Contacted'){
        leadRecord.Status.addError('You cannot directly open a closed record');
                }
            }
    }

}