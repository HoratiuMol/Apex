public with sharing class AccountContactService{

    public static void updateActiveContacts(Set<id> accountIds){

            List<AggregateResult> results=[SELECT Id, Name, AccountId, COUNT(Id) totalContacts 
                    FROM Contact 
                        WHERE Active__c= TRUE 
                        AND AccountId=: accountIds 
                        GROUP BY AccountId
                    ]; 

            Map<Id,Account> accountsToupdate=new Map<Id,Account>();
            //when we store this value we use map instead of list, so we can make sure that we 
            //work with it even if it has no accoutnid

             for(AggregateResult result : results){
                //get account id and number of active contacts
                String accId=String.valueOf(result.get('AccountId'));
                integer totalContacts=Integer.valueOf(result.get('totalContacts'));

                Account acc=new Account(Id=accId, Active_Contacts__c=totalContacts);
                accountsToupdate.add(accId, acc);
        }

        //update accounts with zeroactive contacts
        for(Id accId : accountIds){
            if(accountsToupdate.containsKey(accId)){
                accountsToupdate.add(accId, new Account(Id=accId, Active_Contacts__c=0));
            }
        }

        update accountsToupdate.values();
    }
}